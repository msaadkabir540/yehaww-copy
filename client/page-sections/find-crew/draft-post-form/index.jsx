import { useEffect, useState } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useSelector } from "react-redux";

import List from "components/list";
import Pagination from "components/pagination";
import DeleteActivePost from "../active-post-form/delete-active-post";

import { jobTypeKeys } from "utils/arrayHelper";
import { deleteDraft, getDraftByEmployer } from "api-services/employer";

import style from "../active-post-form/active-post.module.scss";

const DraftPostForm = () => {
  const router = useRouter();
  const { user } = useSelector((state) => state.app);

  const [page, setPage] = useState(router?.query?.page || 0);
  const [delModal, setDelModal] = useState(false);
  const [drafts, setDrafts] = useState({
    drafts: [],
    draftsCount: 0,
  });

  const getDrafts = async () => {
    let jobResponse = await getDraftByEmployer({
      params: {
        page,
        pageSize: 10,
      },
    });
    setDrafts(jobResponse);
  };

  useEffect(async () => {
    await getDrafts();
  }, [user, page]);

  return (
    <div>
      <Head>
        <title>Draft Posts - Yehaww</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="\assets\imgs\logo.webp" />
      </Head>

      <div className={style.gridSection}>
        <div className={style.left}>
          {drafts?.jobs?.map((ele, index) => {
            const btnList = [
              {
                text: "Edit",
                onClick: (id) =>
                  router.push({
                    pathname: "/candidate/post-position",
                    query: {
                      id,
                      edit: true,
                      draft: true,
                    },
                  }),
              },
              { text: "Delete", onClick: () => setDelModal(ele._id) },
            ];
            return (
              <div className={style.videoMain} key={index}>
                <List
                  id={ele?._id}
                  btnList={btnList}
                  listId={ele?._id}
                  listArr={ele.list}
                  btnFlex={style.btn}
                  title={ele.jobTitle}
                  tagClass={style.tag}
                  className={style.card}
                  list_img={
                    ele.image ||
                    (ele?.companyType !== "" &&
                      `/assets/imgs/${jobTypeKeys[ele?.companyType]}.webp`) ||
                    "/assets/imgs/logo.webp"
                  }
                />
                {delModal == ele._id && (
                  <DeleteActivePost
                    delModal={delModal}
                    setDelModal={setDelModal}
                    handleDelete={async () => {
                      const res = await deleteDraft({ id: ele?._id });
                      if (res) {
                        setDrafts((j) => ({
                          ...j,
                          jobs: j.jobs.filter((job) => job._id !== ele._id),
                        }));
                      }
                      setDelModal(false);
                    }}
                  />
                )}
              </div>
            );
          })}
        </div>
        <div style={{ display: "flex", justifyContent: "center", margin: "30px 0px" }}>
          {drafts?.jobs?.length > 0 && (
            <Pagination count={drafts?.jobsCount} page={page} pageSize={10} setPage={setPage} />
          )}
        </div>
      </div>
    </div>
  );
};

export default DraftPostForm;
